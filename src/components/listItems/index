// import React from "react";
// import ReactDOM from "react-dom";
// import ReactDom from "react-dom";

// const appRoot = document.querySelector("#root");
// const modalRoot = document.querySelector("#modalRoot");

// class Modal extends React.Component {
//   el: HTMLDivElement;
//   constructor(props: HTMLElement) {
//     super(props);
//     this.el = document.createElement("div");
//   }

//   componentDidMount() {
//     modalRoot?.appendChild(this.el);
//   }

//   componentWillUnmount() {
//     modalRoot?.removeChild(this.el);
//   }

//   render() {
//     return ReactDom.createPortal(this.props.children, this.el);
//   }
// }

// export default Modal;

// type clicks = number;
// type state = number;

// class Parent extends React.Component {
//   constructor(props: any) {
//     super(props);
//     this.state = {
//       clicks: 0,
//     };
//     this.handleClick = this.handleClick.bind(this);
//   }

//   handleClick(): void {
//     this.setState((state) => ({
//       clicks: state.clicks + 1,
//     }));
//   }

//   render(): JSX.Element {
//     return (
//       <div onClick={this.handleClick}>
//         <p> Col:{this.state.clicks}</p>
//         <p>
//           Откройте DevTools браузера, чтобы убедиться, что кнопка не является
//           потомком блока div c обработчиком onClick.
//         </p>
//         <Modal>
//           <Child />
//         </Modal>
//       </div>
//     );
//   }
// }

// function Child() {
//   return (
//     <div className="modal">
//       Это потомок
//       <button>Нажми меня</button>
//     </div>
//   );
// }

// ReactDOM.render(<Parent />, appRoot);
